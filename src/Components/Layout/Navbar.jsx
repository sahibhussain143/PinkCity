import React, { useState, useEffect } from 'react';
import { NavLink } from 'react-router-dom';
import {
Â  FaSearch,
Â  FaSignInAlt,
Â  FaBars,
Â  FaTimes,
Â  FaUser,
} from 'react-icons/fa';
import { motion, AnimatePresence } from 'framer-motion';
import { events as allEvents } from '../Pages/Home/AllPlaces';

const navVariants = {
Â  hidden: { opacity: 0, y: -20 },
Â  visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },
};

const mobileMenuVariants = {
Â  hidden: { opacity: 0, height: 0, transition: { duration: 0.3 } },
Â  visible: { opacity: 1, height: 'auto', transition: { duration: 0.5 } },
};

const Navbar = ({ onSearch }) => {
Â  const [search, setSearch] = useState('');
Â  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
Â  const [scrolled, setScrolled] = useState(false);
Â  // ðŸ‘‡ New state to track if the search input is focused on mobile
Â  const [searchFocused, setSearchFocused] = useState(false); 

Â  useEffect(() => {
Â  Â  const handleScroll = () => {
Â  Â  Â  const isScrolled = window.scrollY > 10;
Â  Â  Â  setScrolled(isScrolled);
Â  Â  };

Â  Â  window.addEventListener('scroll', handleScroll);
Â  Â  return () => window.removeEventListener('scroll', handleScroll);
Â  }, []);

Â  useEffect(() => {
Â  Â  const timer = setTimeout(() => {
Â  Â  Â  const trimmedSearch = search.trim().toLowerCase();
Â  Â  Â  
Â  Â  Â  if (!trimmedSearch) {
Â  Â  Â  Â  onSearch(null);
Â  Â  Â  Â  return;
Â  Â  Â  }

Â  Â  Â  const filteredResults = allEvents.filter(event =>
Â  Â  Â  Â  event.title.toLowerCase().includes(trimmedSearch) ||
Â  Â  Â  Â  event.description.toLowerCase().includes(trimmedSearch) ||
Â  Â  Â  Â  event.category.toLowerCase().includes(trimmedSearch)
Â  Â  Â  );
Â  Â  Â  
Â  Â  Â  onSearch(filteredResults);
Â  Â  }, 500); 

Â  Â  return () => clearTimeout(timer);
Â  }, [search, onSearch]);

Â  const handleInputChange = (e) => {
Â  Â  setSearch(e.target.value);
Â  };

Â  const navLinks = [
Â  Â  { to: '/', label: 'Home'  },
Â  Â  { to: '/about', label: 'About' },
Â  Â  { to: '/packages', label: 'Packages' },
Â  Â  { to: '/testmonials', label: 'Testmonials' },
Â  Â  { to: '/cycling', label: 'Cycling Tour' },
Â  Â  { to: '/gellary', label: 'Gellary' },
Â  Â  { to: '/confirmbooking', label: 'Bookings' },
Â  ];

Â  return (
Â  Â  <motion.nav
Â  Â  Â  initial="hidden"
Â  Â  Â  animate="visible"
Â  Â  Â  variants={navVariants}
Â  Â  Â  className={`fixed top-0 w-full z-50 transition-all duration-300 ${scrolled ? 'bg-white/10 shadow-lg backdrop-blur-2xl' : 'bg-white/40 backdrop-blur-sm'}`}
Â  Â  >
Â  Â  Â  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
Â  Â  Â  Â  <div className="flex justify-between items-center h-16">
Â  Â  Â  Â  Â  {/* ðŸ‘‡ Logo and name are visible on mobile, so they are not hidden */}
Â  Â  Â  Â  Â  <NavLink
Â  Â  Â  Â  Â  Â  to="/"
Â  Â  Â  Â  Â  Â  onClick={() => setMobileMenuOpen(false)}
Â  Â  Â  Â  Â  Â  className="flex items-center gap-1 text-gray-800 hover:text-pink-600 transition-colors"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  src="/images/pinkcity-icon.png"
Â  Â  Â  Â  Â  Â  Â  alt="Pink City Logo"
Â  Â  Â  Â  Â  Â  Â  className="h-8 w-8"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  <span className="text-xl font-bold hidden xl:inline-block text-pink-600">
Â  Â  Â  Â  Â  Â  Â  Pink City
Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  </NavLink>

Â  Â  Â  Â  Â  <div className="hidden md:flex items-center space-x-1">
Â  Â  Â  Â  Â  Â  {navLinks.map((link) => (
Â  Â  Â  Â  Â  Â  Â  <NavLink
Â  Â  Â  Â  Â  Â  Â  Â  key={link.to}
Â  Â  Â  Â  Â  Â  Â  Â  to={link.to}
Â  Â  Â  Â  Â  Â  Â  Â  className={({ isActive }) =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  `px-3 py-2 rounded-md text-sm font-medium flex items-center gap-1 transition-colors ${isActive
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? 'text-pink-600 bg-pink-50'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : 'text-gray-700 hover:text-pink-600'
Â  Â  Â  Â  Â  Â  Â  Â  Â  }`
Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  {link.label}
Â  Â  Â  Â  Â  Â  Â  </NavLink>
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  <div className="hidden md:flex items-center gap-3">
Â  Â  Â  Â  Â  Â  <div className="relative">
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  value={search}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Search..."
Â  Â  Â  Â  Â  Â  Â  Â  className="pl-3 pr-8 py-1.5 border border-gray-300 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-pink-400 focus:border-transparent w-40 lg:w-52 transition-all"
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  <div className="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500">
Â  Â  Â  Â  Â  Â  Â  Â  <FaSearch />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <NavLink
Â  Â  Â  Â  Â  Â  Â  to="/Login"
Â  Â  Â  Â  Â  Â  Â  className="flex items-center gap-1 px-3 py-1.5 rounded-full bg-gradient-to-r from-pink-500 to-pink-600 text-white text-sm font-medium hover:from-pink-600 hover:to-pink-700 transition-colors shadow-sm"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <FaUser className="text-xs" />
Â  Â  Â  Â  Â  Â  Â  <span>Login</span>
Â  Â  Â  Â  Â  Â  </NavLink>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  <div className="md:hidden flex items-center">
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
Â  Â  Â  Â  Â  Â  Â  className="inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-pink-600 hover:bg-pink-50 focus:outline-none transition-colors"
Â  Â  Â  Â  Â  Â  Â  aria-expanded={mobileMenuOpen}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {mobileMenuOpen ? (
Â  Â  Â  Â  Â  Â  Â  Â  <FaTimes className="block h-6 w-6" />
Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  <FaBars className="block h-6 w-6" />
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>

Â  Â  Â  <AnimatePresence>
Â  Â  Â  Â  {mobileMenuOpen && (
Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  initial="hidden"
Â  Â  Â  Â  Â  Â  animate="visible"
Â  Â  Â  Â  Â  Â  exit="hidden"
Â  Â  Â  Â  Â  Â  variants={mobileMenuVariants}
Â  Â  Â  Â  Â  Â  className="md:hidden overflow-hidden"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <div className="px-4 pt-2 pb-4 space-y-2 bg-white border-t border-gray-200 shadow-inner">
Â  Â  Â  Â  Â  Â  Â  <div className="relative mb-2">
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={search}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleInputChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Search..."
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="block w-full pl-3 pr-8 py-2 border bg-transparent border-gray-300 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-pink-400 focus:border-transparent"
Â  Â  Â  Â  Â  Â  Â  Â  Â  // ðŸ‘‡ Add these event handlers
Â  Â  Â  Â  Â  Â  Â  Â  Â  onFocus={() => setSearchFocused(true)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onBlur={() => setSearchFocused(false)}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <div className="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FaSearch />
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  {/* ðŸ‘‡ Conditionally render the links based on searchFocused state */}
Â  Â  Â  Â  Â  Â  Â  {!searchFocused && (
Â  Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  Â  {navLinks.map((link) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <NavLink
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={link.to}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  to={link.to}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setMobileMenuOpen(false)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={({ isActive }) =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `flex items-center gap-2 px-3 py-2 rounded-md text-base font-medium ${isActive
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? 'bg-pink-50 text-pink-600'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : 'text-gray-700 hover:bg-pink-50 hover:text-pink-600'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {link.label}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </NavLink>
Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  <NavLink
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  to="/login"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setMobileMenuOpen(false)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="flex items-center justify-center gap-2 mt-2 px-4 py-2 rounded-full bg-gradient-to-r from-pink-500 to-pink-600 text-white text-base font-medium hover:from-pink-600 hover:to-pink-700"
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <FaSignInAlt />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>Login / Register</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </NavLink>
Â  Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  )}
Â  Â  Â  </AnimatePresence>
Â  Â  </motion.nav>
Â  );
};

export default Navbar;